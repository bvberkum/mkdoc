# Non-recursive makefile
# Example of mkdoc usage, see git://github.org/dotmpe/mkdoc

# XXX: simple tag to distinguish one mkdoctree from another?
DOMAIN              ?= mpe

# Set level to warning and above
VERBOSE             ?= 4
ifneq ($(V), )
VERBOSE             := $(V)
endif

BUILD               := .build/
DIR                 := .

# XXX: how to find mkdocs, convention, PATH-search?
SRC_PATH            := /src/
PROJ_PATH           := /srv/project-$(DOMAIN)/
MK_ROOT             := $(PROJ_PATH)mkdoc/
MK_SHARE            := $(MK_ROOT)usr/share/mkdoc/

#      ------------ -- 

# XXX: does not have complete path. Need to sperate script identities
d := $(DIR)
MK_$d               := Mkdocs.full

#      ------------ -- 

include                $(MK_SHARE)Core/Main.mk
$(call chat,header,mkdoc,Core script loaded)

#      ------------ -- 

# log-line script is now available for pretty print, do some chatter now:
$(call chat,info,$(MK_$d),Chattiness set to $(VERBOSE))
$(call chat,debug,$(MK_$d),DIR=$(DIR))
$(call chat,debug,$(MK_$d),BUILD=$(BUILD))
$(call chat,debug,$(MK_$d),MK_ROOT=$(MK_ROOT))
$(call chat,debug,$(MK_$d),MK_SHARE=$(MK_SHARE))

#      ------------ -- 

$(call chat,debug,mkdoc,Reading package main include files)

include                \
                       $(MK_SHARE)docutils/Main.mk \
                       $(MK_SHARE)bookmarklet/Main.mk \
                       $(MK_SHARE)vc/Main.mk \
                       $(MK_SHARE)tidy/Main.mk \
                       $(MK_SHARE)haxe/Main.mk \
                       $(MK_SHARE)plotutils/Main.mk \
                       $(MK_SHARE)graphviz/Main.mk 

$(call chat,debug,mkdoc,Done loading packages main file)

#      ------------ -- 

MK                  += $(DIR)/Makefile

$(call chat,header,mkdoc,Reading default rules from packages)

#
include                \
                       $(MK_SHARE)bookmarklet/Rules.default.mk \
                       $(MK_SHARE)graphviz/Rules.default.mk \
                       $(MK_SHARE)rubber/Rules.default.mk \
                       $(MK_SHARE)docutils/Rules.default.mk \
                       $(MK_SHARE)haxe/Rules.default.mk \
                       $(MK_SHARE)plotutils/Rules.default.mk \
#					   $(MK_SHARE)Core/Rules.archive.mk

$(call chat,debug,mkdoc,Done loading packages rules files)

#      ------------ -- 

$(call chat,header,mkdoc,Reading local rules)

# Include specific rules and set SRC, DEP, TRGT and CLN variables.
#
include                $(call rules,$(DIR)/) 

#      ------------ -- 

$(call chat,header,mkdoc,Reading standard rules)

# Now set some standard targets
#
include                $(MK_SHARE)Core/Rules.default.mk

#      ------------ -- 

$(call chat,OK,mkdoc,starting 'make $(MAKECMDGOALS)')

# vim:ft=make:
